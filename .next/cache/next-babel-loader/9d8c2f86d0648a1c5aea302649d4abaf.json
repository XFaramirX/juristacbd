{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jbarrera/Desktop/juristacbd/client/juristacbd/pages/about.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query GetLaunch {\\n        users {\\n          id\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from \"next/link\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: \"http://localhost:7000/graphql\"\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\nconsole.log(client);\nexport default (function () {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"This is a static page goto\", \" \", __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"dynamic\")), \" \", \"page.\", __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"test\"), \",\"));\n});","map":{"version":3,"sources":["/Users/jbarrera/Desktop/juristacbd/client/juristacbd/pages/about.tsx"],"names":["Link","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","React","gql","cache","link","uri","client","query","then","result","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,KAAK,GAAG,IAAIL,aAAJ,EAAd;AACA,IAAMM,IAAI,GAAG,IAAIL,QAAJ,CAAa;AACxBM,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,IAAMC,MAA2C,GAAG,IAAIT,YAAJ,CAAiB;AACnEM,EAAAA,KAAK,EAALA,KADmE;AAEnEC,EAAAA,IAAI,EAAJA;AAFmE,CAAjB,CAApD;AAKAE,MAAM,CACHC,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAF;AADA,CADT,EAWGM,IAXH,CAWQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAXd;AAaAC,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAEA,gBAAe;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC6B,GAD7B,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,EAIU,GAJV,WAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,MANF,CADa;AAAA,CAAf","sourcesContent":["import Link from \"next/link\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:7000/graphql\"\n});\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link\n});\n\nclient\n  .query({\n    query: gql`\n      query GetLaunch {\n        users {\n          id\n          name\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\nconsole.log(client);\n\nexport default () => (\n  <div>\n    This is a static page goto{\" \"}\n    <Link href=\"/\">\n      <a>dynamic</a>\n    </Link>{\" \"}\n    page.\n    <p>\n      <ApolloProvider client={client}>test</ApolloProvider>,\n    </p>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}