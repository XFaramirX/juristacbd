{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport fetch from \"node-fetch\";\nimport { createHttpLink } from \"apollo-link-http\";\nconst link = createHttpLink({\n  uri: \"http://localhost:7000/graphql\",\n  fetch: fetch\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  cache,\n  link\n});\nclient.query({\n  query: gql`\n      query GetLaunch {\n        users {\n          id\n          name\n        }\n      }\n    `\n}).then(result => console.log(result));\nconst GET_USERS = gql`\n  {\n    users {\n      id\n      name\n    }\n  }\n`;\n\nconst ExchangeRates = client => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_USERS);\n  console.log(client);\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"Error :(\");\n  return data.rates.map(({\n    id,\n    name\n  }) => __jsx(\"div\", {\n    key: id\n  }, __jsx(\"p\", null, name, \": \", id)));\n};\n\nexport default ExchangeRates;","map":null,"metadata":{},"sourceType":"module"}