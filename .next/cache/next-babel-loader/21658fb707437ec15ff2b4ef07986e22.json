{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jbarrera/Desktop/juristacbd/client/juristacbd/pages/about.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        query GetLaunch {\\n          users {\\n            id\\n            name\\n          }\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from \"next/link\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: \"http://localhost:7000/graphql\"\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\n\nvar result = function result() {\n  var users;\n  return _regeneratorRuntime.async(function result$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.query({\n            query: gql(_templateObject())\n          }).then(function (result) {\n            return console.log(result);\n          }));\n\n        case 2:\n          users = _context.sent;\n          users.map(function (i) {\n            return __jsx(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, i.id);\n          });\n          return _context.abrupt(\"return\", users);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nresult();\nexport default (function () {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"This is a static page goto\", \" \", __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"dynamic\")), \" \", \"page.\", __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ApolloProvider, {\n    result: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, client), \",\"));\n});","map":{"version":3,"sources":["/Users/jbarrera/Desktop/juristacbd/client/juristacbd/pages/about.tsx"],"names":["Link","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","React","gql","cache","link","uri","client","result","query","then","console","log","users","map","i","id"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,KAAK,GAAG,IAAIL,aAAJ,EAAd;AACA,IAAMM,IAAI,GAAG,IAAIL,QAAJ,CAAa;AACxBM,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,IAAMC,MAA2C,GAAG,IAAIT,YAAJ,CAAiB;AACnEM,EAAAA,KAAK,EAALA,KADmE;AAEnEC,EAAAA,IAAI,EAAJA;AAFmE,CAAjB,CAApD;;AAKA,IAAMG,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACYD,MAAM,CAC5BE,KADsB,CAChB;AACLA,YAAAA,KAAK,EAAEN,GAAF;AADA,WADgB,EAWtBO,IAXsB,CAWjB,UAAAF,MAAM;AAAA,mBAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CAAJ;AAAA,WAXW,CADZ;;AAAA;AACPK,UAAAA,KADO;AAcbA,UAAAA,KAAK,CAACC,GAAN,CAAU,UAACC,CAAD,EAAgC;AACxC,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKA,CAAC,CAACC,EAAP,CAAP;AACD,WAFD;AAda,2CAiBNH,KAjBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAmBAL,MAAM;AAEN,gBAAe;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC6B,GAD7B,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,EAIU,GAJV,WAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,MAAjC,CADF,MANF,CADa;AAAA,CAAf","sourcesContent":["import Link from \"next/link\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\n\nimport gql from \"graphql-tag\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:7000/graphql\"\n});\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link\n});\n\nconst result = async () => {\n  const users: any = await client\n    .query({\n      query: gql`\n        query GetLaunch {\n          users {\n            id\n            name\n          }\n        }\n      `\n    })\n    .then(result => console.log(result));\n\n  users.map((i: { id: React.ReactNode }) => {\n    return <h1>{i.id}</h1>;\n  });\n  return users;\n};\nresult();\n\nexport default () => (\n  <div>\n    This is a static page goto{\" \"}\n    <Link href=\"/\">\n      <a>dynamic</a>\n    </Link>{\" \"}\n    page.\n    <p>\n      <ApolloProvider result={client}>{client}</ApolloProvider>,\n    </p>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}